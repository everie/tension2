const Defaults={Size:5,Start:3,UndoMax:3,UndoIncrease:30,MaxLives:100,NoRiseBuffer:1,LocalGameData:"GAME2",LocalHighScore:"HIGH2",LocalLastState:"LAST2",Scrolling:{Speed:320,Easing:"ease-out"}};const Current={High:0,Move:0,Score:0,Level:0,Lives:0,NoRise:0,Options:0,Busy:false,Blocks:[],Selected:[],Empties:[],Background:[],GameSize:0,BlockSize:0,FontSize:0,ScoreSize:0,Auto:false,Undo:{Moves:0,Count:0,Can:false},Merges:{},HasSelect:function(){return this.Selected.length>1},BlocksAsObj:function(InclSelf=false){return this.Blocks.map(a=>{let Obj={X:parseInt(a.dataset.x),Y:parseInt(a.dataset.y),Num:parseInt(a.dataset.num)};if(InclSelf)Obj["Self"]=a;if(a.dataset.bonus)Obj["B"]=a.dataset.bonus;return Obj})},Start:null};function GetNumColour(num){switch(num){case 1:return"#3fff00";case 2:return"#0099ff";case 3:return"#ff7200";case 4:return"#ff003b";case 5:return"#b71cff";case 6:return"#f9ff56";case 7:return"#16efff";case 8:return"#56ffa2";case 9:return"#ff3d81";case 10:return"#45484d"}}function GetNumColour2(num){switch(num){case 1:return"#00a01d";case 2:return"#005587";case 3:return"#ad4800";case 4:return"#a80000";case 5:return"#5d009b";case 6:return"#bcd100";case 7:return"#006b59";case 8:return"#00bf5c";case 9:return"#af0046";case 10:return"#000000"}}function GetNumColour3(num){switch(num){case 1:return"#c5ffb2";case 2:return"#b2e0ff";case 3:return"#ffd4b2";case 4:return"#ffb2c4";case 5:return"#e9baff";case 6:return"#fdffcc";case 7:return"#b9faff";case 8:return"#ccffe3";case 9:return"#ffc4d9";case 10:return"#c7c8c9"}}function SquareChoice(){switch(Current.High){case 3:return RandomByProbability([{Value:1,Weight:.65},{Value:2,Weight:.35}]);case 4:return RandomByProbability([{Value:1,Weight:.45},{Value:2,Weight:.3},{Value:3,Weight:.25}]);case 5:return RandomByProbability([{Value:1,Weight:.45},{Value:2,Weight:.25},{Value:3,Weight:.2},{Value:4,Weight:.1}]);case 6:return RandomByProbability([{Value:1,Weight:.45},{Value:2,Weight:.3},{Value:3,Weight:.2},{Value:4,Weight:.1},{Value:5,Weight:.05}]);case 7:return RandomByProbability([{Value:1,Weight:.4},{Value:2,Weight:.25},{Value:3,Weight:.2},{Value:4,Weight:.1},{Value:5,Weight:.05}]);case 8:return RandomByProbability([{Value:1,Weight:.35},{Value:2,Weight:.2},{Value:3,Weight:.175},{Value:4,Weight:.125},{Value:5,Weight:.1},{Value:6,Weight:.05}]);case 9:return RandomByProbability([{Value:1,Weight:.3},{Value:2,Weight:.275},{Value:3,Weight:.15},{Value:4,Weight:.125},{Value:5,Weight:.075},{Value:6,Weight:.05},{Value:7,Weight:.025}]);case 10:return RandomByProbability([{Value:1,Weight:.25},{Value:2,Weight:.225},{Value:3,Weight:.2},{Value:4,Weight:.15},{Value:5,Weight:.1},{Value:6,Weight:.05},{Value:7,Weight:.025}])}}function BonusChoice(Pct){if(Pct<.25){return RandomByProbability([{Value:1,Weight:.9},{Value:2,Weight:.1}])}else if(Pct>=.25&&Pct<.4){return RandomByProbability([{Value:1,Weight:.8},{Value:2,Weight:.2}])}else if(Pct>=.4&&Pct<.6){return RandomByProbability([{Value:2,Weight:.8},{Value:3,Weight:.2}])}else if(Pct>=.6){return RandomByProbability([{Value:2,Weight:.5},{Value:3,Weight:.4},{Value:4,Weight:.1}])}}function GetCurrentState(){let Obj={High:Current.High,Move:Current.Move,Score:Current.Score,Blocks:Current.BlocksAsObj(),Merges:Current.Merges,Start:Current.Start,Undo:Current.Undo,Level:Current.Level,Lives:Current.Lives,NoRise:Current.NoRise,Background:Current.Background};return Obj}function StoreCurrentState(){let Obj=GetCurrentState();localStorage.setItem(Defaults.LocalGameData,JSON.stringify(Obj))}function StoreLastState(){let Obj=GetCurrentState();localStorage.setItem(Defaults.LocalLastState,JSON.stringify(Obj))}function LoadLastState(Key=Defaults.LocalGameData){let Game=GetLocalItem(Key);if(Game!==null){Current.High=Game.High;Current.Move=Game.Move;Current.Score=Game.Score;Current.Merges=Game.Merges;Current.Start=Game.Start;Current.Undo=Game.Undo;Current.Level=Game.Level;Current.Lives=Game.Lives;Current.NoRise=Game.NoRise;Current.Background=Game.Background;return Game.Blocks}return null}function ClearLastState(){localStorage.setItem(Defaults.LocalLastState,"")}function SaveLastStateOnEnd(){let Scores=GetLocalItem(Defaults.LocalHighScore);let End=GetCurrentState();End["ID"]=MakeGameID(20);End["End"]=GetTimestamp();if(Scores!==null){let Top=Scores.Top;Top.push(End);SortByKey(Top,"Score",false);if(Top.length>10)Top.pop();localStorage.setItem(Defaults.LocalHighScore,JSON.stringify(Scores));return Top.findIndex(a=>a.ID===End.ID)+1}else{let Obj={Top:[End]};localStorage.setItem(Defaults.LocalHighScore,JSON.stringify(Obj));return 1}}